Subject: [PATCH] Added support for `_PYTHON_HOST_PLATFORM` and `_PYTHON_SYSCONFIGDATA_NAME` environment variables when cross-compiling LLDB with Python, https://peps.python.org/pep-0720/#upstream-support
---
Index: lldb/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	(revision e21dc4bd5474d04b8e62d7331362edcc5648d7e5)
+++ b/CMakeLists.txt	(revision 2f1df1d442199f7ede7a17a4e87034e7d67744a8)
@@ -59,8 +59,23 @@
   set(cachestring_LLDB_PYTHON_EXT_SUFFIX
     "Filename extension for native code python modules")
 
+  set(LLDB_USE_HOST_PYTHON FALSE)
+  if(NOT CMAKE_CROSSCOMPILING)
+    set(LLDB_USE_HOST_PYTHON TRUE)
+  else()
+    # Used when cross-compiling LLDB with Python:
+    # - `_PYTHON_HOST_PLATFORM`: Specifies the host platform, e.g., 'linux-x86_64'.
+    # - `_PYTHON_SYSCONFIGDATA_NAME`: The name of the Python configuration module containing
+    #   platform, build, and configuration details (e.g., `_sysconfigdata__linux_x86_64-linux-gnu`).
+    # See: https://peps.python.org/pep-0720/#upstream-support
+    # If both environment variables are defined, we assume host Python can be used.
+    if(DEFINED ENV{_PYTHON_HOST_PLATFORM} and DEFINED ENV{_PYTHON_SYSCONFIGDATA_NAME})
+      set(LLDB_USE_HOST_PYTHON TRUE)
+    endif()
+  endif()
+
   foreach(var LLDB_PYTHON_RELATIVE_PATH LLDB_PYTHON_EXE_RELATIVE_PATH LLDB_PYTHON_EXT_SUFFIX)
-    if(NOT DEFINED ${var} AND NOT CMAKE_CROSSCOMPILING)
+    if(NOT DEFINED ${var} AND LLDB_USE_HOST_PYTHON)
       execute_process(
         COMMAND ${Python3_EXECUTABLE}
           ${CMAKE_CURRENT_SOURCE_DIR}/bindings/python/get-python-config.py
